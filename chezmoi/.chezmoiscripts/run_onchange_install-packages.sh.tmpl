#!/usr/bin/env bash

_exists() {
  command -v "$1" > /dev/null 2>&1
}

{{ if .linux -}}
  arch=$(uname -m)
  packages="bat gh most jq ripgrep"
  {{- if eq .install_type "min" }}

  {{- else }}
    packages+=" exa gnupg2 grc"

    if [[ "$arch" == "x86_64" ]]; then
      arch="amd64"
    elif [[ "$arch" == "aarch64" ]]; then
      arch="arm64"
    fi

    filename="op_linux_${arch}_v2.30.3.zip"
    curl -sLO "https://cache.agilebits.com/dist/1P/op/pkg/v2.30.3/$filename"
    cd "$HOME/.local/bin"
    unzip "$HOME/$filename" > /dev/null
    # Verify download
    gpg --keyserver hkps://keyserver.ubuntu.com --receive-keys 3FEF9748469ADBE15DA7CA80AC2D62742012EA22 &> /dev/null
    gpg --verify op.sig op &> /dev/null || fail "Problem verifying op binary"
    rm op.sig
    cd "$HOME"
    rm "$HOME/$filename"
  {{- end }}
  # Install packages
  sudo apt-get -q update > /dev/null && sudo apt-get -q install -y $packages > /dev/null > /dev/null

  # if ! _exists jj; then
  #   if [[ "$arch" == "amd64" ]]; then
  #     pattern="jj-*-amd64-unknown-linux-musl.tar.gz"
  #   elif [[ "$arch" == "aarch64" ]]; then
  #     pattern="jj-*-aarch64-unknown-linux-musl.tar.gz"
  #   else
  #     pattern="jj-*-x86_64-unknown-linux-musl.tar.gz"
  #   fi

  #   gh release download --repo jj-vcs/jj --pattern "$pattern" --dir "$HOME/.local/bin" --clobber \
  #   && tar -xzf $HOME/.local/bin/*.tar.gz -C $HOME/.local/bin/ ./jj \
  #   && rm $HOME/.local/bin/*.tar.gz
  # fi

{{- else if .mac }}
  {{- if ne .install_type "min" }}
    if ! _exists git; then
      xcode-select --install
    fi
    if ! _exists brew && [ -f "$HOME/.config/homebrew/Brewfile" ]; then
      bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      eval '$(/opt/homebrew/bin/brew shellenv)'
    fi

    # Build the restic-wrapper binary
    go build -o "$HOME/.local/gobin/restic-wrapper" "{{- .chezmoi.sourceDir }}/../ano/restic-wrapper/restic-wrapper.go"

    # Load/reload backup launchd job
    if launchctl list local.restic_backup > /dev/null 2>&1; then
      launchctl unload "$HOME/Library/LaunchAgents/local.restic_backup.plist"
    fi
    launchctl load "$HOME/Library/LaunchAgents/local.restic_backup.plist"
  {{- end -}}
{{- end }}
