# vim: set ft=zsh
# Personal Zsh configuration file. It is strongly recommended to keep all
# shell customization and configuration (including exported environment
# variables such as PATH) in this file or in files source by it.
#
# Documentation: https://github.com/romkatv/zsh4humans/blob/v5/README.md.
# Profile loading the shell using `ZPROF=1 zsh -i`
[ -z "$ZPROF" ] || zmodload zsh/zprof

#### ---:[ Z4H config ]:--- ###

zstyle ':z4h:' auto-update      'no'  # Periodic auto-update on Zsh startup: 'ask' or 'no'. You can manually run `z4h update` to update everything.
zstyle ':z4h:' auto-update-days '28'  # Ask whether to auto-update this often; has no effect if auto-update is 'no'.
zstyle ':z4h:' prompt-at-bottom 'no'  # Move prompt to the bottom when zsh starts and on Ctrl+L.
zstyle ':z4h:bindkey' keyboard  'mac' # Keyboard type: 'mac' or 'pc'.
zstyle ':z4h:autosuggestions' forward-char 'accept' # Right-arrow key accepts one character ('partial-accept') from command autosuggestions or the whole thing ('accept')?
zstyle ':z4h:fzf-complete' recurse-dirs 'no' # Recursively traverse directories when TAB-completing files.
zstyle ':z4h:direnv'         enable 'no' # Enable direnv to automatically source .envrc files.
zstyle ':z4h:direnv:success' notify 'yes' # Show "loading" and "unloading" notifications from direnv.
# Enable ('yes') or disable ('no') automatic teleportation of z4h over
# SSH when connecting to these hosts.
#zstyle ':z4h:ssh:example-hostname1'   enable 'yes'
#zstyle ':z4h:ssh:*.example-hostname2' enable 'no'
# The default value if none of the overrides above match the hostname.
zstyle ':z4h:ssh:*'                   enable 'no'
# Send these files over to the remote host when connecting over SSH to the
# enabled hosts.
#zstyle ':z4h:ssh:*' send-extra-files '~/.nanorc' '~/.env.zsh'
zstyle :z4h: start-tmux 'no' # Don't download and start tmux-related stuff as I don't use tmux

# Clone additional Git repositories from GitHub.
#
# This doesn't do anything apart from cloning the repository and keeping it
# up-to-date. Cloned files can be used after `z4h init`. This is just an
# example. If you don't plan to use Oh My Zsh, delete this line.
# z4h install ohmyzsh/ohmyzsh || return

# Install or update core components (fzf, zsh-autosuggestions, etc.) and
# initialize Zsh. After this point console I/O is unavailable until Zsh
# is fully initialized. Everything that requires user interaction or can
# perform network I/O must be done above. Everything else is best done below.
z4h init || return

# Ensure path arrays do not contain duplicates.
typeset -gU fpath path

# Extend PATH.
path=(
  ~/bin
  $path
)

# Extend function path
fpath=(
  $ZDOTDIR/functions
  $ZDOTDIR/completions
  $fpath
)

#### ---:[ Export Variables ]:--- ###
export GPG_TTY=$TTY
[ -z "$LANG" ] && export LANG='en_GB.UTF-8'  # Speak British to me, might need to run `sudo locale-gen en_GB.utf8` first
[ -d ${HOME}/go ] && export GOPATH=${HOME}/go
export HOMEBREW_INSTALL_CLEANUP=1 # Always clean up when installing Homebrew packages
export HOMEBREW_BOOTSNAP=1        # Speed up homebrew
export HOMEBREW_NO_ANALYTICS=1    # Don't send analytics
export EDITOR='vim'
export VISUAL='vim'
export PAGER='less'
# Set the Less input preprocessor.
# Try both `lesspipe` and `lesspipe.sh` as either might exist on a system.
if (( $#commands[(i)lesspipe(|.sh)] )); then
  export LESSOPEN="| /usr/bin/env $commands[(i)lesspipe(|.sh)] %s 2>&-"
  export LESS_ADVANCED_PREPROCESSOR=1
fi
export GREP_COLOR=${GREP_COLOR:-'37;45'}            # BSD.
export GREP_COLORS=${GREP_COLORS:-"mt=$GREP_COLOR"} # GNU.
# Gimme colourful man pages
export LESS_TERMCAP_mb=$'\E[01;31m'                 # Begins blinking. (red)
export LESS_TERMCAP_md=$'\E[01;31m'                 # Begins bold. (red)
export LESS_TERMCAP_me=$'\E[0m'                     # Ends mode.
export LESS_TERMCAP_se=$'\E[0m'                     # Ends standout-mode.
export LESS_TERMCAP_so=$'\E[00;47;30m'              # Begins standout-mode.
export LESS_TERMCAP_ue=$'\E[0m'                     # Ends underline.
export LESS_TERMCAP_us=$'\E[01;32m'                 # Begins underline.
# Store stuff in ~/.config and ~/.cache when we can.
# https://github.com/grawity/dotfiles/blob/master/.dotfiles.notes
# https://www.reddit.com/r/zsh/comments/fvtr19/no_more_dotfile_clutter_in_my_home/
[ -z "$XDG_CONFIG_HOME" ] && export XDG_CONFIG_HOME="${HOME}/.config"
[ -z "$XDG_CACHE_HOME" ] && export XDG_CACHE_HOME="${HOME}/.cache"

export LESSHISTFILE=$XDG_CONFIG_HOME/lesshistory
export BUNDLE_USER_HOME=$XDG_CONFIG_HOME/bundle
export IRBRC=$XDG_CONFIG_HOME/irbrc

HISTFILE=$XDG_CONFIG_HOME/zsh/.zsh_history
HISTSIZE=11000               # Max. entries to keep in memory
SAVEHIST=10000               # Max. entries to save to file
HISTORY_IGNORE='([bf]g *|[bf]g|disown|cd ..|cd -)' # Don't add these to the history file.

#### ---:[ Aliases ]:--- ###
alias path='echo -e ${PATH//:/\\n}'
alias rm='nocorrect rm'
alias l='ls -lg'
alias ll='ls -lga'
alias ls-l='ls -l'
alias ..='cd ..'
alias path='echo -e ${PATH//:/\\n}'
alias fpath='echo -e ${FPATH//:/\\n}'
alias unzip="unzip -qq"
alias myprocs="ps aux | grep $USER"
alias nocmt="grep -v '^$\|^\s*\#'"
alias vi=vim
alias curl="noglob curl"              # Don't glob
alias find='noglob find'              # Allows typing e.g. "find . -name *.zsh" without quotes.
alias cp='cp -i'                      # Ask for confirmation when overwriting existing files.
alias mv='mv -i'

# Lazy Git aliases
alias gcom="git com"
alias gup="git up"  # Uses the `up` alias in my .gitconfigcd
alias gst="git status"
alias g='git'
alias gb='git branch'
alias gbc='git switch -c'
alias gc='git commit --verbose'
alias gco='git switch'
alias gls='git log --topo-order --stat --pretty=format:"${_git_log_medium_format}"'
alias gld='git log --topo-order --stat --patch --full-diff --pretty=format:"${_git_log_medium_format}"'
alias gp='git push -u'

_exists() { (( $+commands[$1] )) }

_exists hub && {
  alias git=hub
  alias ci="hub ci-status"
}
_exists bat && alias cat=bat && export BAT_THEME="Monokai Extended"
_exists exa && alias ls=exa
_exists rg && rg() { $commands[rg] -p "$@" | less; }
_exists prettyping && alias ping="prettyping --nolegend"
_exists htop && alias top=htop

unfunction _exists


#### ---:[ Shell options ]:--- ###
# See: http://zsh.sourceforge.net/Doc/Release/Options.html.
# These are only the ones not set by z4h in z4h.zsh or that I'm overriding.
setopt glob_dots              # no special treatment for file names with a leading dot
setopt no_auto_menu           # require an extra TAB press to open the completion menu
setopt inc_append_history     # Append immediately rather than only at exit
setopt hist_no_store          # Don't store history or fc commands
setopt hist_ignore_all_dups   # Remove older event if new event is duplicate.
setopt combining_chars        # Combine zero-length punctuation characters (accents) with the base character.
setopt rc_quotes              # Allow 'Henry''s Garage' instead of 'Henry'\''s Garage'.
unsetopt mail_warning         # Don't print a warning message if a mail file has been accessed.
setopt long_list_jobs         # List jobs in the long format by default.
setopt auto_resume            # Attempt to resume existing job before creating a new process.
setopt notify                 # Report status of background jobs immediately.
unsetopt bg_nice              # Don't run all background jobs at a lower priority.
unsetopt hup                  # Don't kill jobs on shell exit.
unsetopt check_jobs           # Don't report on jobs when shell exit.
unsetopt clobber              # Do not overwrite existing files with > and >>. Use >! and >>! to bypass.

#### ---:[ Keybindings ]:--- ###
z4h bindkey undo Ctrl+/   Shift+Tab # undo the last command line change
z4h bindkey redo Option+/           # redo the last undone command line change
z4h bindkey z4h-cd-back    Shift+Left   # cd into the previous directory
z4h bindkey z4h-cd-forward Shift+Right  # cd into the next directory
z4h bindkey z4h-cd-up      Shift+Up     # cd into the parent directory
z4h bindkey z4h-cd-down    Shift+Down   # cd into a child directory

#### ---:[ Autoload functions ]:--- ###
autoload -Uz zmv
autoload -Uz $fpath[1]/*(.:t)           # Load all functions in the first directory which is my own.

autoload -Uz bracketed-paste-url-magic
zle -N bracketed-paste bracketed-paste-url-magic
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# Define functions and completions.
# Or place the functions in $ZDOTDIR/functions and the completions in $ZDOTDIR/completions.
function md() { [[ $# == 1 ]] && mkdir -p -- "$1" && cd -- "$1" }
compdef _directories md


z4h source "$HOME/.secrets"
z4h source /etc/grc.zsh # Colourize all the other things
z4h source /usr/local/etc/grc.zsh # Colourize all the other things
z4h source -- ${HOMEBREW_PREFIX:+$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh} # Load asdf if it's installed.

# This must always be last.
[ -z "$ZPROF" ] || zprof